ALL VERSIONS
[>782] TEMPR( pin ) 
Return the temperature measured by a DS18B20 temperature sensor connected to 'pin' (which does not have to be configured). 
The returned value is degrees C with a default resolution of 0.25 C. If there is an error during the measurement the returned value will be 1000. 
The time required for the overall measurement is 200ms and interrupts will be ignored during this period. 
Alternatively the TEMPR START command can be used to start the measurement and your program can do other things while the conversion is progressing. 
When this function is called the value will then be returned instantly assuming the conversion period has expired. 
If it has not, this function will wait out the remainder of the conversion time before returning the value. 
The DS18B20 can be powered separately by a 3V to 5V supply or it can operate on parasitic power from the PicoMiteVGA .

The TEMPR() function will get the temperature from a DS18B20 temperature sensor. This device can be purchased on eBay for about US$5 in a variety of packages including a waterproof probe version.
The DS18B20 can be powered separately by a 3.3V supply or it can operate on parasitic power from the Raspberry Pi Pico as shown on the right. 
Multiple sensors can be used but a separate I/O pin and a 4.7K pullup resistor is required for each one.
To get the current temperature you just use the TEMPR() function in an expression. For example:
<CODE>
PRINT "Temperature: " TEMPR(pin)
</CODE>

Where 'pin' is the I/O pin to which the sensor is connected. You do not have to configure the I/O pin, that is handled by MMBasic.
The returned value is in degrees C with a resolution of 0.25 ºC and is accurate to ±0.5 ºC. If there is an error during the measurement the returned value will be 1000.
The time required for the overall measurement is 200ms and the running program will halt for this period while the measurement is being made.
This also means that interrupts will be disabled for this period. If you do not want this you can separately trigger the conversion using the TEMPR START command then later use the TEMPR() function to retrieve the temperature reading. 
The TEMPR() function will always wait if the sensor is still making the measurement. For example:
<CODE>
TEMPR START GP15
< do other tasks >
PRINT "Temperature: " TEMPR(GP15)
</CODE>

The TEMPR START command can also be used to change the resolution of the measurement (from the default 0.25 ºC) and the associated conversion time.
