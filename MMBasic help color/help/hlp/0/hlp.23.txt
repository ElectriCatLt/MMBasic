ALL VERSIONS
[>24] SD Cards
An SD card socket can be connected to the Raspberry Pi Pico and accessed as drive B:. 
Like the Flash Filesystem the normal BASIC file commands can be used to save/load programs as well as opening data files for read/write.
Cards up to 32 GB formatted in FAT16 or FAT32 are supported and the files created can also be read/written on personal computers running Windows, Linux or the Mac operating system. 
The PicoMite firmware uses the SPI protocol to talk to the card and this is not influenced by the card type, so all types (Class 4, 10, UHS-1 etc) are supported. 
For a description of SPI see: http://en.wikipedia.org/wiki/Serial_Peripheral_Interface_Bus 
The SPI protocol needs to be specifically configured before it can be used. This can be done in one of two ways - by using the "system" SPI port or by directly specifying the I/O pins to use:
<CGRE>
SYSTEM SPI PORT
</CGRE>

This is a port that will be used for system use (SD card, LCD display and the touch controller on an LCD panel). 
There are a number of ports and pins that can be used (see the chapter PicoMite Hardware) but this example uses SPI on pins GP18, GP19 and GP16 for Clock, MOSI and MISO respectively.
<CODE>
OPTION SYSTEM SPI GP18, GP19, GP16
</CODE>

Then MMBasic must be told that there is an SD card attached and what pin is used for the Chip Select (CS) signal:
<CODE>
OPTION SDCARD GP22
</CODE>
<CGRE>
DEDICATED I/O PINS
</CGRE>

Alternatively, where no other devices share the SPI bus with the SD card it can be set up with: 
<CODE>
OPTION SDCARD CS_pin, CLK_pin, MOSI_pin, MISO_pin
</CODE>

In this case the pins can be assigned completely flexibly and do not need to be capable of SPI operation but SD card performance will be better if valid SPI pins are chosen.
These commands must be entered at the command prompt (not in a program) and will cause the PicoMite firmware to restart. 
This has the side effect of disconnecting the USB console interface which will need to be reconnected.
When the Raspberry Pi Pico is restarted MMBasic will automatically initialise the SD Card interface. 
This SPI port will then not be available to BASIC programs (ie, it is reserved). 
To verify the configuration, you can use the command OPTION LIST to list all options that have been set including the configuration of the SD Card.
<CGRE>
Note that you can use many different configurations using various pin allocations
</CGRE>

Care must be taken when the SPI port is shared between a number of devices (SD Card, touch, etc). 
In this case all the Chip Select signals must configured in MMBasic or alternatively disabled by a permanent connection to 3.3V.
If this is not done any floating Chip Select signal lines can cause the wrong controller to respond to commands on the SPI bus.
